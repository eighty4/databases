name: Release

on:
  workflow_call:
    inputs:
      semver-bump:
        type: string
        default: prerelease
  workflow_dispatch:
    inputs:
      semver-bump:
        description: Semver bump release type
        required: true
        type: choice
        default: patch
        options:
          - major
          - minor
          - patch

concurrency: release

env:
  SEMVER_BUMP: ${{inputs.semver-bump}}

jobs:

  check-build-params:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: validate only prerelease semver bump for publishing @next
        run: |
          [[ ${{github.event_name}} == "push" ]] && exit 0
          [[ $SEMVER_BUMP = "prerelease" ]] && exit 1 || exit 0
      - name: validate changesets for release
        run: |
          [[ ${{github.event_name}} == "push" ]] && exit 0
          VERSION=$(npm version $SEMVER_BUMP --no-git-tag-version)
          git diff $(git rev-list -n 1 $(git describe --tags --abbrev=0)) CHANGELOG.md | grep "## $VERSION"

  verified:
    uses: ./.github/workflows/verify.yaml
    needs: [ check-build-params ]

  create-git-tag:
    name: create release tag
    runs-on: ubuntu-latest
    needs: [ verified ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: semver
        id: semver
        run: |
          [[ $SEMVER_BUMP = "prerelease" ]] && NPM_TAG="next" || NPM_TAG="latest"
          [[ $SEMVER_BUMP = "prerelease" ]] && PRERELEASE="true" || PRERELEASE="false"
          VERSION=$(npm version $SEMVER_BUMP --no-git-tag-version)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "prerelease=$PRERELEASE" >> "$GITHUB_OUTPUT"
          echo "npm-tag=$NPM_TAG" >> "$GITHUB_OUTPUT"
          git config --global user.name "Adam McKee"
          git config --global user.email "adam.be.g84d@gmail.com"
          git commit -am "increment @$NPM_TAG to $VERSION"
          git tag $VERSION
          git push --atomic origin main $VERSION
    outputs:
      prerelease: ${{steps.semver.outputs.prerelease}}
      version: ${{steps.semver.outputs.version}}
      npm-tag: ${{steps.semver.outputs.npm-tag}}

  create-gh-release:
    name: create github release
    runs-on: ubuntu-latest
    needs: [ create-git-tag ]
    steps:
      - name: create github release
        env:
          PRERELEASE: ${{needs.create-git-tag.outputs.prerelease}}
          VERSION: ${{needs.create-git-tag.outputs.version}}
          GH_TOKEN: ${{ github.token }}
        run: |
          CREATED_RELEASE=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/eighty4/databases/releases \
            -f tag_name="$VERSION" \
            -f name="$VERSION" \
            -f body="$VERSION release" \
            -F draft=false \
            -F prerelease=$PRERELEASE \
            -F generate_release_notes=false)

  npm-publish:
    name: publish to npm
    needs: [ create-gh-release, create-git-tag ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-tags: true
          ref: ${{needs.create-git-tag.outputs.version}}
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
      - run: corepack enable && corepack prepare pnpm@latest --activate
      - name: deps
        run: pnpm i -P
      - name: build
        run: pnpm build
      - name: publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_TAG: ${{needs.create-git-tag.outputs.npm-tag}}
          VERSION: ${{needs.create-git-tag.outputs.version}}
        run: pnpm publish --access public --tag $NPM_TAG --no-git-checks
